Из всех старых набросков для тестовых весь функционал вытащен.

Сначала разгрести и отрефакторить весь мусор после переноса из старых реп.
А уж потом пилить новые фичи.
С порядком выполнения задач-рефакторинга я ещё не определился.
============================================================
-- Сделать первую версию лайв-темплейта для vue-comp TS CompositionApi.
-- Со шпаргалками.

-- Пофиксить тудухи

- Поменьше SCSS
  - Перевести большинство переменных на SCSS.
    CSS-переменными оставить только те, которые будут изменяться js-ом.
    Почему? Читай в гисте по SCSS "почему рано уходить с scss"
  - Избавиться от функций, лупов, и прочего, чего нет в CSS
  - Переименовать переменные более внятно. Особенно это касается переменных с цветами.
  - Чтобы переменные брекпоинтов начинались в $bp, чтобы работал автокомплит.

- Попробовать заменить классы h1-base - h6-base просто на h-base, чтобы не было кучи лишних классов.
  (эта тудуха скопирована из identic bounce)
  Да, там получилось как-то сложно. Можно сделать проще.

- Дать вменяемые названия компонентам.

- Возможно переименовать omni-present обратно в my-own-library

- компонент mainMenu - он-же в фреймворке, поэтому нужно В НЕГО передавать список элементов.
  - И следовательно как-то импортировать тип(ы?) для меню из фреймворка в компонент.

Когда открепишь все identic-bounces
  - Чистка
  - Линтер

- Почитать-поконспектировать книгу по typescript?
  - Чтобы не удивляться новым синтаксисам и т.д. и т.п.

- Поставить те 4 значения из книги  в tsconfig


